from struct import pack

expected = (
    pack("<Q", 0xe609b1ded3f09f81) +
    pack("<Q", 0x4f485f66bc89df8a) +
    pack("<Q", 0xbede5f908aa1ae5e) +
    pack("<Q", 0x1dc9618e7fc4a582) +
    pack("<I", 0x79228416) +
    pack("<H", 0xc0ec) +
    pack("<B", 0x22)
)

mask = bytes([
    0xe4, 0xfc, 0x83, 0xb0, 0xec, 0x84, 0x72, 0x8a,
    0xe3, 0xb4, 0xec, 0x91, 0x03, 0x31, 0x2f, 0x26,
    0x30, 0xcb, 0xc4, 0xf8, 0xf9, 0x31, 0xb9, 0x93,
    0xe0, 0xd0, 0xb0, 0x52, 0xe7, 0x0f, 0xe4, 0x6f,
    0x73, 0xf2, 0x47, 0x0b, 0x9f, 0xa5, 0x5f
])

flag = bytes([a ^ b for a, b in zip(expected, mask)])
print("Flag:")    #   ecsc25{like-engineering-but-in-reverse}
print(flag.decode())
